#SPDX-License-Identifier: MIT-0
---
# tasks file for ansible_galaxy_role_hadoop

- name: "Hadoop | Install required packages"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.apt:
    pkg:
      - pdsh
    state: present
    update_cache: yes
  tags:
    - packages

- name: "Hadoop | Create a group"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.group:
    name: hadoop
    state: present

- name: "Hadoop | Create users"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.user:
    name: "{{ item }}"
    password: ""
    group: hadoop
    create_home: true
    shell: /usr/bin/bash
    state: present
  with_items:
    - hadoop
    - hdfs
    - yarn
    - mapred

- name: "Hadoop | Add users to hadoop group"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.user:
    name: "{{ item }}"
    groups: hadoop
    append: true
  with_items:
    - root
    - "{{ ansible_user }}"

- name: "Hadoop | Create a directory for ssh trusted access"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "700"
  with_items:
    - hdfs
    - yarn
    - mapred

- name: "Hadoop | Copy files for ssh trusted access"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.copy:
    src: "ssh-key/{{ item.src }}"
    dest: "/home/{{ item.owner }}/.ssh/{{ item.dest }}"
    mode: "600"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - { src: "id_ed25519", dest: "id_ed25519", owner: "hdfs", group: "hdfs" }
    - {
        src: "id_ed25519.pub",
        dest: "authorized_keys",
        owner: "hdfs",
        group: "hdfs",
      }
    - { src: "id_ed25519", dest: "id_ed25519", owner: "yarn", group: "yarn" }
    - {
        src: "id_ed25519.pub",
        dest: "authorized_keys",
        owner: "yarn",
        group: "yarn",
      }
    - {
        src: "id_ed25519",
        dest: "id_ed25519",
        owner: "mapred",
        group: "mapred",
      }
    - {
        src: "id_ed25519.pub",
        dest: "authorized_keys",
        owner: "mapred",
        group: "mapred",
      }

- name: "Hadoop | Download jdk tarball file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz
    dest: /usr/local/src

- name: "Hadoop | Unpack jdk tarball file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.unarchive:
    remote_src: yes
    src: /usr/local/src/openjdk-11.0.2_linux-x64_bin.tar.gz
    dest: /opt

- name: "Hadoop | Download binary"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://dlcdn.apache.org/hadoop/common/hadoop-3.4.1/hadoop-3.4.1.tar.gz
    dest: /usr/local/src

- name: "Hadoop | Download signature file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://dlcdn.apache.org/hadoop/common/hadoop-3.4.1/hadoop-3.4.1.tar.gz.asc
    dest: /usr/local/src

- name: "Hadoop | Download key file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.get_url:
    url: https://downloads.apache.org/hadoop/common/KEYS
    dest: /tmp/hadoop-keys

- name: "Hadoop | Install GPG"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  apt:
    pkg:
      - gpg
    state: present
    update_cache: yes

- name: "Hadoop | Import GPG public key and verify binary"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      gpg --import /tmp/hadoop-keys
      gpg --verify /usr/local/src/hadoop-3.4.1.tar.gz.asc /usr/local/src/hadoop-3.4.1.tar.gz
  register: hadoop_gpg_verify

- name: "Hadoop | Succeeded to verify"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.debug:
    msg: "GPG検証が成功しました。"
  when: hadoop_gpg_verify.rc == 0

- name: "Hadoop | Failed to verify"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.debug:
    msg: "GPG検証が失敗しました。"
  when: hadoop_gpg_verify.rc != 0

- name: "Hadoop | Unpack binary"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.unarchive:
    remote_src: yes
    src: /usr/local/src/hadoop-3.4.1.tar.gz
    dest: /opt
    mode: "775"
    owner: hadoop
    group: hadoop

- name: "Hadoop | Copy files"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - {
        src: "etc/profile.d/00-java.sh",
        dest: "/etc/profile.d/00-java.sh",
        mode: "644",
        owner: "root",
        group: "root",
      }
    - {
        src: "etc/profile.d/01-hadoop.sh",
        dest: "/etc/profile.d/01-hadoop.sh",
        mode: "644",
        owner: "root",
        group: "root",
      }
    - {
        src: "hadoop-env.sh",
        dest: "/opt/hadoop-3.4.1/etc/hadoop/hadoop-env.sh",
        mode: "775",
        owner: "hadoop",
        group: "hadoop",
      }
    - {
        src: "hadoop-node-health-check.sh",
        dest: "/opt/hadoop-3.4.1/bin/hadoop-node-health-check.sh",
        mode: "775",
        owner: "hadoop",
        group: "hadoop",
      }

- name: "Hadoop | Replace configuration files"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.template:
    src: "{{ item }}-site.xml.j2"
    dest: "/opt/hadoop-3.4.1/etc/hadoop/{{ item }}-site.xml"
    owner: hadoop
    group: hadoop
    mode: "644"
  with_items:
    - core
    - hdfs
    - mapred
    - yarn
  tags:
    - oneshot

- name: "Hadoop | Add worker hostnames or IP addresses in etc/hadoop/workers file"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.lineinfile:
    path: /opt/hadoop-3.4.1/etc/hadoop/workers
    regexp: '^{{ item | regex_replace("\.", "\.") }}$'
    insertafter: "^localhost$"
    line: "{{ item }}"
  loop: "{{ hadoop.workers | flatten(1) }}"

- name: "Hadoop | Create directories for Hadoop Cluster"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: hadoop
    group: hadoop
    mode: "775"
  with_items:
    - /opt/hadoop-3.4.1/logs
    - "{{ hadoop.tmp.dir }}"
